(type Hlir
  (enum (MovePtrLeft)
        (MovePtrRight)
        (IncrementCell)
        (DecrementCell)
        (GetInput)
        (PutOutput)
        (StartLoop)
        (EndLoop)
        (ClearCell)))

(type Mlir
  (enum (ChangeCell (value i8) (offset i32))
        (MovePointer (offset i32))
        (SetCell (value u8) (offset i32))
        (FindZero (offset i32))
        (InputIntoCell)
        (OutputCurrentCell)
        (OutputChar (value u8))
        (MoveValue (multiplier u8) (offset i32))
        (TakeValue (multiplier u8) (offset i32))
        (FetchValue (multiplier u8) (offset i32))
        (StartBlock)
        (EndBlock)))

(decl pure lower (Hlir) Mlir)

(rule (lower (Hlir.StartLoop))
      (Mlir.StartBlock))

(rule (lower (Hlir.EndLoop))
      (Mlir.EndBlock))

(rule (lower (Hlir.IncrementCell))
      (Mlir.ChangeCell 1 0))

(rule (lower (Hlir.DecrementCell))
      (Mlir.ChangeCell -1 0))

(rule (lower (Hlir.MovePtrLeft))
      (Mlir.MovePointer -1))

(rule (lower (Hlir.MovePtrRight))
      (Mlir.MovePointer 1))

(rule (lower (Hlir.GetInput))
      (Mlir.InputIntoCell))

(rule (lower (Hlir.PutOutput))
      (Mlir.OutputCurrentCell))

(rule (lower (Hlir.ClearCell))
      (Mlir.SetCell 0 0))

(decl pure offsets_eq (i32 i32) bool)
(extern constructor offsets_eq offsets_eq)

(decl pure partial simplify_three (Mlir Mlir Mlir) Mlir)

(decl pure partial simplify_four (Mlir Mlir Mlir Mlir) Mlir)

(decl pure convert_to_unsigned (i8) u8)
(extern constructor convert_to_unsigned convert_to_unsigned)

(decl pure neg_offset (i32) i32)
(extern constructor neg_offset neg_offset)

(rule (simplify_three (Mlir.StartBlock) (Mlir.ChangeCell -1 0) (Mlir.EndBlock))
      (Mlir.SetCell 0 0))

(rule (simplify_four (Mlir.StartBlock) (Mlir.ChangeCell -1 0) (Mlir.ChangeCell i offset) (Mlir.EndBlock))
      (Mlir.MoveValue (convert_to_unsigned i) offset))

